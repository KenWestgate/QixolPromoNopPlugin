@model MissedPromotionBogorModel

@using Qixol.Plugin.Misc.Promo.Models.MissedPromotions;
@using global::Nop.Web.Models.Catalog;
@using global::Nop.Core.Domain.Orders;

@{
    Layout = null;
}

<tr>
    <td class="product-picture">
        @{
            var matchedCartItemModel = Model.MatchedCartItemModels.FirstOrDefault();
            if (matchedCartItemModel != null)
            {
                <div><a href="@Url.RouteUrl("Product", new { SeName = matchedCartItemModel.ProductSeName })"><img alt="@matchedCartItemModel.Picture.AlternateText" src="@matchedCartItemModel.Picture.ImageUrl" title="@matchedCartItemModel.Picture.Title" /></a></div>
            }
        }
    </td>
    <td class="product">
        @if (matchedCartItemModel != null)
        {
            <a href="@Url.RouteUrl("Product", new { SeName = matchedCartItemModel.ProductSeName })" class="product-name">@matchedCartItemModel.ProductName</a>
            if (!String.IsNullOrEmpty(matchedCartItemModel.AttributeInfo))
            {
                <div class="attributes">
                    @Html.Raw(matchedCartItemModel.AttributeInfo)
                </div>
            }
        }
        @if (!string.IsNullOrEmpty(@Model.PromotionName))
        {
            <div class="promotion-item">@Model.PromotionName</div>
        }
        else
        {
            <div class="promotion-item">BOGOF</div>
        }
        @if (Model.AddToCartModel != null && matchedCartItemModel != null)
        {
            var dataDictAddToCart = new ViewDataDictionary();
            dataDictAddToCart.TemplateInfo.HtmlFieldPrefix = string.Format("addtocart_{0}", matchedCartItemModel.Id);
            <div class="add-to-cart-panel">
                <script type="text/javascript">
                    function addToCart_@(matchedCartItemModel.ProductId)() {
                        promoAjaxCart.addproducttocart_missedPromotions('@Url.RouteUrl("AddProductToCart-Details", new { productId = matchedCartItemModel.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })');
                        //window.location = '@(Url.Action("MissedPromotions"))';
                    }
                </script>

                @{
                    var addToCartText = "";
                    addToCartText = T("ShoppingCart.AddToCart").Text;
                }
                <input type="button" id="add-to-cart-button-@matchedCartItemModel.ProductId" class="button-1 add-to-cart-button" value="@addToCartText" data-productid="@matchedCartItemModel.ProductId" onclick="addToCart_@(matchedCartItemModel.ProductId)();" />
            </div>
        }
        @*@if (matchedCartItemModel != null)
            {
                var editCartItemUrl = Url.RouteUrl("Product", new { SeName = matchedCartItemModel.ProductSeName });
                editCartItemUrl = webHelper.ModifyQueryString(editCartItemUrl, "updatecartitemid=" + matchedCartItemModel.Id, null);
                <div class="edit-item">
                    <a href="@editCartItemUrl">@T("Common.Edit")</a>
                </div>
            }*@
    </td>
</tr>
