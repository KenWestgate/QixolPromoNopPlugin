@model MissedPromotionsModel

@using Qixol.Plugin.Misc.Promo.Models.MissedPromotions;

@using global::Nop.Core.Domain.Tax
@using global::Nop.Core
@using global::Nop.Core.Infrastructure
@using global::Nop.Web.Models.ShoppingCart;
@using global::Nop.Web.Framework.Themes;

@{
    var webHelper = EngineContext.Current.Resolve<IWebHelper>();
    var themeName = EngineContext.Current.Resolve<IThemeContext>().WorkingThemeName;

    Html.AppendCssFileParts(string.Format("~/Plugins/Misc.QixolPromo/Themes/{0}/Content/css/styles.css", themeName));
}

@* inline style temporarily until able to add css from one page checkout *@
<style>
    .promotion-item {
        color: #4ab2f1;
        font-style: italic;
        font-weight: normal;
    }

    .no-bottom-border td {
        border-bottom: 0px !important;
    }

    .cart-promotion-row td {
        line-height: 15px !important;
    }

    .cart-coupon-row td {
        line-height: 15px !important;
    }

    .truncate-140 {
        float: left;
        max-width: 140px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

        .truncate-140:hover {
            overflow: visible;
        }
</style>

<div class="order-summary-content">
    @*@Html.Widget("order_summary_content_before")*@
    @*@Html.Partial("_OrderReviewData", Model.OrderReviewData)*@
    @if (Model.MissedPromotions.Count > 0)
    {
        @*we add enctype = "multipart/form-data" because "File upload" attribute control type requires it*@
    using (Html.BeginRouteForm("ShoppingCart", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="table-wrapper">
            <table class="cart">
                <colgroup>
                    <col width="1" />
                    <col />
                    <col width="1" />
                </colgroup>
                <thead>
                    <tr>
                        <th class="product-picture">
                            @T("ShoppingCart.Image")
                        </th>
                        <th class="product">
                            @T("ShoppingCart.Product(s)")
                        </th>
                        <th class="unit-price">
                            @T("ShoppingCart.UnitPrice")
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (MissedPromotionBaseModel missedPromotion in Model.MissedPromotions)
                    {
                        @*<tr><td></td><td>@missedPromotion.PromotionName</td><td></td></tr>*@
                    switch (missedPromotion.PromotionType)
                    {
                        case "BOGOF":
                            //MissedPromotionBogofModel mpBogof = (MissedPromotionBogofModel) missedPromotion;
                            <tr>
                                <td class="product-picture">
                                    @{
                                        var matchedCartItemModel = missedPromotion.MatchedCartItemModels.FirstOrDefault();
                                        if (matchedCartItemModel != null)
                                        {
                                            <div><a href="@Url.RouteUrl("Product", new { SeName = matchedCartItemModel.ProductSeName })"><img alt="@matchedCartItemModel.Picture.AlternateText" src="@matchedCartItemModel.Picture.ImageUrl" title="@matchedCartItemModel.Picture.Title" /></a></div>
                                        }
                                    }
                                </td>
                                <td class="product">
                                    @if (matchedCartItemModel != null)
                                    {
                                        <a href="@Url.RouteUrl("Product", new { SeName = matchedCartItemModel.ProductSeName })" class="product-name">@matchedCartItemModel.ProductName</a>
                                        if (!String.IsNullOrEmpty(matchedCartItemModel.AttributeInfo))
                                        {
                                            <div class="attributes">
                                                @Html.Raw(matchedCartItemModel.AttributeInfo)
                                            </div>
                                        }
                                    }
                                    @if (!string.IsNullOrEmpty(@missedPromotion.PromotionName))
                                    {
                                        <div class="promotion-item">@missedPromotion.PromotionName</div>
                                    }
                                    else
                                    {
                                        <div class="promotion-item">BOGOF</div>
                                    }
                                </td>
                                <td class="unit-price"></td>
                            </tr>
                                            break;

                                        case "BUNDLE":
                                            <tr>
                                                <td class="product-picture">
                                                    @*<a href="@Url.RouteUrl("Product", new { SeName = Model.ProductSeName })"><img alt="@Model.Picture.AlternateText" src="@Model.Picture.ImageUrl" title="@Model.Picture.Title" /></a>*@
                                                </td>
                                                <td class="product">
                                                    @if (!string.IsNullOrEmpty(@missedPromotion.PromotionName))
                                                    {
                                                        <div class="promotion-item">@missedPromotion.PromotionName</div>
                                                    }
                                                    else
                                                    {
                                                        <div class="promotion-item">BUNDLE</div>
                                                    }
                                                </td>
                                                <td class="unit-price"></td>
                                            </tr>
                                            break;

                                        case "FREEPRODUCT":
                                            <tr>
                                                <td class="product-picture">
                                                    @*<a href="@Url.RouteUrl("Product", new { SeName = Model.ProductSeName })"><img alt="@Model.Picture.AlternateText" src="@Model.Picture.ImageUrl" title="@Model.Picture.Title" /></a>*@
                                                </td>
                                                <td class="product">
                                                    @if (!string.IsNullOrEmpty(@missedPromotion.PromotionName))
                                                    {
                                                        <div class="promotion-item">@missedPromotion.PromotionName</div>
                                                    }
                                                    else
                                                    {
                                                        <div class="promotion-item">FREEPRODUCT</div>
                                                    }
                                                </td>
                                                <td class="unit-price"></td>
                                            </tr>
                                            break;

                                        default:
                                            <tr>
                                                <td class="product-picture">
                                                    @*<a href="@Url.RouteUrl("Product", new { SeName = Model.ProductSeName })"><img alt="@Model.Picture.AlternateText" src="@Model.Picture.ImageUrl" title="@Model.Picture.Title" /></a>*@
                                                </td>
                                                <td class="product">
                                                    @if (!string.IsNullOrEmpty(@missedPromotion.PromotionName))
                                                    {
                                                        <div class="promotion-item">@missedPromotion.PromotionName</div>
                                                    }
                                                    else
                                                    {
                                                        <div class="promotion-item">@missedPromotion.PromotionType</div>
                                                    }
                                                </td>
                                                <td class="unit-price"></td>
                                            </tr>
                                                    break;
                                            }
                                        }
                </tbody>
            </table>
        </div>
        @*<div class="cart-options">
                @if (Model.IsEditable)
                            {
                    <div class="common-buttons">
                        <input type="submit" name="updatecart" value="@T("ShoppingCart.UpdateCart")" class="button-2 update-cart-button" />
                        <input type="submit" name="continueshopping" value="@T("ShoppingCart.ContinueShopping")" class="button-2 continue-shopping-button" />
                    </div>
                }
                @if (Model.IsEditable)
                        {
                            @Html.Partial("_CheckoutAttributes", Model.CheckoutAttributes, new ViewDataDictionary())
                }
                @if (!String.IsNullOrEmpty(Model.CheckoutAttributeInfo))
                {
                    <div class="selected-checkout-attributes">
                        @Html.Raw(Model.CheckoutAttributeInfo)
                    </div>
                }
            </div>*@
                                        <div class="cart-footer">
                                            @*@Html.Widget("order_summary_cart_footer")*@

                                            <div class="totals">
                                                @Html.Action("OrderTotals", "ShoppingCart", new
           {
               isEditable = false @*Model.IsEditable*@ })
                                                @*@if (Model.IsEditable)
                                                    {
                                                        if (!String.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
                                                        {
                                                                    <div class="min-amount-warning">
                                                                        @Model.MinOrderSubtotalWarning
                                                                    </div>
                                                                }
                                                            }*@
                                                @if (true)
                    {
                                                    @*if (Model.TermsOfServiceOnShoppingCartPage)
                                                        {
                                                                    <div id="terms-of-service-warning-box" title="@T("Checkout.TermsOfService")" style="display:none;">
                                                                        <p>@T("Checkout.TermsOfService.PleaseAccept")</p>
                                                                    </div>
                                                                    <div class="terms-of-service">
                                                                        <input id="termsofservice" type="checkbox" name="termsofservice" />
                                                                        <span>@T("Checkout.TermsOfService.IAccept")<a class="read" onclick="javascript:OpenWindow('@Url.RouteUrl("TopicPopup", new { SystemName = "conditionsofuse" })', 450, 500, true)">@T("Checkout.TermsOfService.Read")</a></span>
                                                                    </div>
                                                                }*@
                                                    <div class="checkout-buttons">
                                                        @*@if (String.IsNullOrEmpty(Model.MinOrderSubtotalWarning))
                                                                                    {
                                                                                        <script type="text/javascript">
                                                                                            $(document).ready(function () {
                                                                                                $('#checkout').click(function () {
                                                                    //terms of service
                                                                    var termOfServiceOk = true;
                                                                    if ($('#termsofservice').length > 0) {
                                                                        //terms of service element exists
                                                                        if (!$('#termsofservice').is(':checked')) {
                                                                                                            $("#terms-of-service-warning-box").dialog();
                                                                            termOfServiceOk = false;
                                                                        } else {
                                                                            termOfServiceOk = true;
                                                                        }
                                                                    }
                                                                    return termOfServiceOk;
                                                                });
                                                            });
                                                                                        </script>*@
                                                        <button type="submit" id="checkout" name="checkout" value="checkout" class="button-1 checkout-button">
                                                            @T("Checkout.Button")
                                                        </button>
                                                    </div>
                                                    <div class="addon-buttons">
                                                        @*Payment method buttons (e.g. GoogleCheckoutButton, Paypal Express)*@
                                                        @*@Html.Partial("_ButtonPaymentMethod", Model)*@
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                        @*if (Model.IsEditable)
                                            {
                                                 @Html.Action("CrossSellProducts", "Product")
                                            }*@
                                            }
                                        }
                                        @*@Html.Widget("order_summary_content_after")*@
                                    </div>
