@model WidgetConfigModel

@{
    Layout = "";
    var selectedTabIndex = Model.SelectedTab;
}

<script type="text/javascript">
    $(document).ready(function () {
        $("#qixolpromotionsbase-configure").kendoTabStrip({
            animation: {
                open: {
                    effects: "fadeIn"
                }
            },
            select: tabstrip_on_tab_select
        });

        var labels = document.getElementsByTagName('LABEL');
        for (var i = 0; i < labels.length; i++) {
            if (labels[i].htmlFor != '') {
                var elem = document.getElementById(labels[i].htmlFor);
                if (elem)
                    elem.label = labels[i];
            }
        }

        @if (!Model.ShowPromotionDetailsOnProductPage)
        { 
            <text>enableItems('@Html.IdFor(m => m.ProductPagePromoDetailsWidgetZone)', false);</text>
        }
    });

    function enableItems(key, enableIt) {
        //alert(enableIt);
        var itemName = getNameFromKey(key);
        $("#" + itemName).prop('disabled', !enableIt);

        var labelElement = document.getElementById(itemName).label;
        if (enableIt) {
            document.getElementById(itemName).label.style.color = "black";
        }
        else {
            document.getElementById(itemName).label.style.color = "silver";
        }
    }

    function onShowPromosOnDetailsPageChange(value) {
        enableItems('@Html.IdFor(m => m.ProductPagePromoDetailsWidgetZone)', value);
    }

    function getNameFromKey(key) {
        switch (key) {
            default:
                return key;
        }
    }

</script>    

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div id="qixolpromotionsbase-configure">
        <ul>
            <li @Html.RenderSelectedTabIndex(0, selectedTabIndex)>
                @T("Plugins.Widgets.QixolPromo.General")
            </li>
            <li @Html.RenderSelectedTabIndex(1, selectedTabIndex)>
                @T("Plugins.Widgets.QixolPromo.Pictures")
            </li>
            <li @Html.RenderSelectedTabIndex(2, selectedTabIndex)>
                @T("Plugins.Widgets.QixolPromo.Banners")
            </li>
        </ul>
        <div>
            @TabGeneralSettings()
        </div>
        <div>
            @Html.Partial("_PicturesList", Model.AddPictureModel)
        </div>
        <div>
            @Html.Partial("_BannersList", Model.AddPromoBannerModel)
        </div>
    </div>

    <div class="options" style="margin-top: 10px;">
        <input type="submit" name="save" class="k-button" value="@T("Admin.Common.Save")" />
        <a class="k-button" style="vertical-align: middle; margin-left: 7px;" href="http://admin.qixolpromo.com" target="_blank">
            <img src="http://admin.qixolpromo.com/Content/imgs/qixol_fav.png" style="vertical-align: middle;" />
             @T("Plugins.Misc.QixolPromo.GoToPromo")
        </a>
    </div>
}

@helper TabGeneralSettings()
{
    <table class="adminContent" style="margin-top: 20px; margin-bottom: 20px;">
        <tr>
            <td class="adminTitle" colspan="2" style="font-weight:bold;">
                @T("Plugins.Widgets.QixolPromo.PromoDetails")
            </td>
        </tr>
        <tr>
            <td class="adminTitle" style="padding-left: 25px;">
                @Html.NopLabelFor(model => model.ShowStickersInCatalogue):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ShowStickersInCatalogue)
            </td>
        </tr>
        <tr>
            <td class="adminTitle" style="padding-left: 25px;">
                @Html.NopLabelFor(model => model.ShowStickersInProductPage):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ShowStickersInProductPage)
            </td>
        </tr>
        <tr>
            <td class="adminTitle" style="padding-left: 25px;">
                @Html.NopLabelFor(model => model.ShowPromotionDetailsOnProductPage):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.ShowPromotionDetailsOnProductPage, new { htmlAttributes = new { onChange = "onShowPromosOnDetailsPageChange(this.checked);" } })
            </td>
        </tr>
        <tr>
            <td class="adminTitle" style="padding-left: 25px;">
                @Html.NopLabelFor(model => model.ProductPagePromoDetailsWidgetZone):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.ProductPagePromoDetailsWidgetZone, Model.ProductPagePromoDetailsWidgetZonesList)
                @Html.ValidationMessageFor(model => model.ProductPagePromoDetailsWidgetZone)
            </td>
        </tr>
    </table>
}